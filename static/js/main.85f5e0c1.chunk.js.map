{"version":3,"sources":["stores/TodoModel.js","stores/TodoStore.js","components/TodoEntry.js","components/TodoItem.js","components/UlElements.js","components/UlElementsCompleted.js","components/UlElementsActive.js","components/TodoItems.js","App.js","components/PageFooter.js","serviceWorker.js","index.js"],"names":["TodoModel","store","title","completed","id","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","observable","action","lastId","todos","push","e","i","length","splice","_this","TodoEntry","state","value","event","keyCode","preventDefault","TodoStore","addTodo","setState","_this2","react_default","a","createElement","className","type","placeholder","onChange","target","onKeyDown","insert","Component","TodoItem","observer","ontoggle","props","todo","toggle","elem","idNum","parentElement","findElem","idNumber","checked","onClick","function1","UElements","style","display","map","todoElememnt","components_TodoItem","UlElementsCompleted","UlElementsActive","TodoItems","document","getElementById","filter","alert","UlElements","components_UlElementsCompleted","components_UlElementsActive","elements","allTodo","activeTodo","doneTodo","removeCompleted","App","components_TodoEntry","components_TodoItems","PageFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","components_PageFooter","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85f5e0c1.chunk.js","sourcesContent":["import {observable, action} from 'mobx'\n\nexport default class TodoModel {\n    @observable title;\n    @observable completed;\n    id;\n    store;\n    constructor(store, title, completed, id){\n        this.title = title;\n        this.completed=completed;\n        this.store= store;\n        this.id= id;   \n    }\n    @action toggle(){\n        this.completed = !this.completed;\n    }\n}\n","import {observable, action} from 'mobx'\nimport TodoModel from \"./TodoModel\";\n\nclass TodoStore {\n    \n    store;\n     @observable todos = [];    \n    lastId= 0;\n    \n    @action \n    addTodo(title){\n        this.todos.push(new TodoModel(this, title, false,this.lastId ++) );\n    }\n    @action removeCompleted =() => {\n     \n      for(let i=0; i<this.todos.length; i++){\n        if(this.todos[i].completed){\n          return(this.todos.splice( i, 1));\n        }\n       }\n    }\n    @action findElem(e){\n       for(let i=0; i<this.todos.length; i++){\n        if(this.todos[i].id==e){\n          return(this.todos.splice(i,1))\n         } \n        \n       }\n      }\n}\nconst store = new TodoStore()\nexport default store;\n","import  React, {Component} from 'react';\r\nimport TodoStore from \"../stores/TodoStore\"\r\n\r\nclass TodoEntry extends Component {\r\n    state ={\r\n           value: \"\"\r\n    }\r\n    insert(event){\r\n        if(event.keyCode!== 13){\r\n            return\r\n        }\r\n        event.preventDefault();\r\n        TodoStore.addTodo(this.state.value);\r\n        this.setState(\r\n            {value: \"\"}\r\n        )\r\n    }\r\n\r\n    render(){\r\n      \r\n        return(\r\n        <header className=\"header\">\r\n            <h1>to do</h1>\r\n            <input type='text' value={this.state.value} className=\"new-todo\" placeholder=\"چه کاری باید انجام بشه؟ تایپ کن :)\"\r\n             onChange={\r\n                 event => this.setState(\r\n                     {\r\n                         value: event.target.value\r\n                     }\r\n                 )} onKeyDown={event =>this.insert(event)} />\r\n        </header>\r\n        )\r\n    }\r\n\r\n}\r\nexport default TodoEntry;","import React, {Component} from 'react';\r\nimport {observer} from \"mobx-react\";\r\nimport TodoStore from \"../stores/TodoStore\"\r\n@observer\r\nclass TodoItem extends Component {\r\n       \r\n    ontoggle = () =>{\r\n        this.props.todo.toggle();\r\n    } \r\n    function1(elem){\r\n        let idNum= elem.target.parentElement.parentElement.id;\r\n        TodoStore.findElem(idNum);\r\n    }\r\n    render(){\r\n        const {todo} = this.props; \r\n        return(\r\n            <li className={todo.completed ?'completed' : \" \"} id={this.props.idNumber}>\r\n                <div className=\"view\">\r\n                    <input type=\"checkbox\" className=\"toggle\" value=\"on\" onChange={this.ontoggle} checked={todo.completed}/>\r\n                    <label>{todo.title} </label>\r\n                    <button className=\"destroy fa fa-close\" onClick={(e)=>{this.function1(e)}}> \r\n                    </button>  \r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import  React, {Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport TodoStore from '../stores/TodoStore';\r\nclass UElements extends Component {\r\n    render(){\r\n        \r\n        return(\r\n          <ul className=\"todo-list\"  id=\"allList\" style={{display:\"block\"}}>\r\n              {\r\n                TodoStore.todos.map(todoElememnt=>{\r\n                  return(\r\n                    <TodoItem todo={todoElememnt} idNumber={todoElememnt.id}/>\r\n                  )\r\n                })\r\n              }\r\n            </ul> \r\n        )\r\n    }\r\n}\r\n\r\nexport default UElements;","import  React, {Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport TodoStore from '../stores/TodoStore';\r\n class UlElementsCompleted extends Component{\r\n  render(){\r\n    return(\r\n            <ul className=\"todo-list\"  id=\"doneList\" style={{display:\"none\"}}>\r\n              {\r\n                TodoStore.todos.map(todoElememnt=>{\r\n                  if(todoElememnt.completed){\r\n                    return(\r\n                      <TodoItem todo={todoElememnt} idNumber={todoElememnt.id}/>\r\n                    )\r\n                  }\r\n                  \r\n                })\r\n              }\r\n            </ul>   \r\n    )\r\n  }\r\n}\r\n\r\nexport default UlElementsCompleted;","import  React, {Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport TodoStore from '../stores/TodoStore';\r\n\r\n class UlElementsActive extends Component{\r\n\r\n  render(){\r\n    return(\r\n      <ul className=\"todo-list\" id=\"activeList\" style={{display:\"none\"}}>\r\n      {\r\n        TodoStore.todos.map(todoElememnt=>{\r\n          if(!todoElememnt.completed){\r\n            return(\r\n              <TodoItem todo={todoElememnt} idNumber={todoElememnt.id}/>\r\n            )\r\n          }\r\n          \r\n        })\r\n      }\r\n    </ul>  \r\n    )\r\n  }\r\n}\r\n\r\nexport default UlElementsActive;","import  React, {Component} from 'react';\r\nimport TodoStore from '../stores/TodoStore';\r\nimport UlElements from './UlElements';\r\nimport UlElementsCompleted from './UlElementsCompleted';\r\nimport UlElementsActive from './UlElementsActive';\r\nimport { observer } from 'mobx-react';\r\n\r\n@observer\r\nclass TodoItems extends Component {\r\n  allTodo(){\r\n    document.getElementById(\"allList\").style.display=\"block\";\r\n    document.getElementById(\"activeList\").style.display=\"none\";\r\n    document.getElementById(\"doneList\").style.display=\"none\";\r\n  }\r\n  doneTodo(){\r\n    let completedTodos = TodoStore.todos.filter(elem => elem.completed);\r\n    if (completedTodos.length==0){\r\n      alert(\"هیچ آیتم انجام شده‌ای وجود ندارد\")\r\n      document.getElementById(\"allList\").style.display=\"block\";\r\n      document.getElementById(\"activeList\").style.display=\"none\";\r\n    }\r\n    else{\r\n      document.getElementById(\"allList\").style.display=\"none\";\r\n      document.getElementById(\"doneList\").style.display=\"block\";\r\n      document.getElementById(\"activeList\").style.display=\"none\";\r\n    }\r\n\r\n  }\r\n  activeTodo(){\r\n    let activeTodos = TodoStore.todos.filter(elem => !elem.completed);\r\n    if (activeTodos.length==0){\r\n      alert(\"تمام آیتم‌ها انجام شده‌است\")\r\n      document.getElementById(\"allList\").style.display=\"block\";\r\n      document.getElementById(\"doneList\").style.display=\"none\";\r\n    }\r\n    else{\r\n      document.getElementById(\"allList\").style.display=\"none\";\r\n      document.getElementById(\"doneList\").style.display=\"none\";\r\n      document.getElementById(\"activeList\").style.display=\"block\";\r\n    }\r\n     \r\n  }\r\n    render(){\r\n        return(\r\n          \r\n            <section className=\"main\">\r\n              <UlElements/> \r\n            <UlElementsCompleted/> \r\n            <UlElementsActive/>   \r\n            <div className=\"footer\">\r\n              <div className=\"todo-count\">آیتم ناتمام:<span> {TodoStore.todos.filter(elements =>{return !elements.completed }).length}  </span></div>\r\n              <div className=\"filter-section\">\r\n                <button onClick={this.allTodo}>همه </button>\r\n                <button  onClick={this.activeTodo}>ناتمام</button>\r\n                <button> <span  onClick={this.doneTodo}>انجام شده</span></button>\r\n              </div>\r\n              <div className=\"remover-section\"> <button  onClick={TodoStore.removeCompleted}> حذف انجام شده‌ها</button>\r\n              </div>\r\n            </div> \r\n            <div className=\"pages\"></div>\r\n          </section>\r\n         \r\n          \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TodoItems;","import React, {Component} from 'react';\nimport './App.css';\nimport TodoEntry from './components/TodoEntry';\nimport TodoItems from './components/TodoItems';\nimport {observer} from 'mobx-react';\n\n@observer\nclass App extends Component {\n    render() {\n        return(\n                <div className=\"become-flex\">\n                    <div className=\"todoapp\" id='todoapp'>\n                        <TodoEntry/>\n                        <TodoItems/>\n                    </div>\n                </div>        \n         )\n    }\n}\n\n\nexport default App;\n","import React, {Component} from 'react';\r\n \r\nclass PageFooter extends Component{\r\n  render(){\r\n    return(\r\n      <footer className=\"page-footer\">\r\n        <div>\r\n          Designed with <span className=\"fa fa-heart\"></span> by Parastoo Alirezazadeh\r\n        </div>\r\n      </footer>\r\n            \r\n    )\r\n  }\r\n}\r\nexport default PageFooter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport PageFooter from './components/PageFooter'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<PageFooter />, document.getElementById('footer'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}